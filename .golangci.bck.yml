# SPDX-License-Identifier: Apache-2.0

# More info on config here: https://golangci-lint.run/usage/configuration/
run:
  timeout: 5m
  issues-exit-code: 1
  tests: true

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: true

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: true
  govet:
    enable:
      - shadow
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2

linters:
  disable-all: true
  enable:
    - bodyclose
    - dogsled
    - errcheck
    - errorlint
    - errname
    - goconst
    - gocyclo
    - gofmt
    - goimports
    - govet
    - ineffassign
    - nakedret
    - prealloc
    - sqlclosecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - wastedassign
    - whitespace
    - wsl
issues:
  exclude-dirs:
    - .git
    - bin
    - vendor
    - node_modules
    - var
    - gen
    - tmp
  exclude-files:
    - \.pb\.go$
    - \.pb\.goclay\.go$
    - _test\.go$
  exclude-use-default: false
  exclude:
    # _ instead of err checks
    - G104
    # for "public interface + private struct implementation" cases only!
    - exported func * returns unexported type *, which can be annoying to use
    # can be removed in the development phase
    # - (comment on exported (method|function|type|const)|should have( a package)? comment|comment should be of the form)
    # not for the active development - can be removed in the stable phase
    - should have a package comment, unless it's in another file for this package
    - don't use an underscore in package name
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv|.*Rollback). is not checked
    - should check returned error before deferring
    - error returned from external package is unwrapped
    - variable name '*' is too short for the scope of its usage
  exclude-rules:
    - text: 'shadow: declaration of "(err|ctx)" shadows declaration at'
      linters: [govet]